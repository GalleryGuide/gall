/// Makes an element visually hidden, but accessible.
/// See http://snook.ca/archives/html_and_css/hiding-content-for-accessibility

@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

/// Turns off the element-invisible effect.

@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

/// Makes an element visually hidden by default, but visible when focused.

@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}


@mixin float-fix() {
  &:before,
  &:after {
    display: table;
    content: ' ';
    visibility: hidden; // Firefox
  }

  &:after {
    clear: both;
  }
}

/// Hide text of an element, for example when applying an image sprite.

@mixin hide-text {
  text-indent: -9999px;
  white-space: nowrap;
  overflow: hidden;
}

/// Convert a pixel value to ems.

@function em($pixels, $context: $base-font-size) {
  @return #{$pixels/$context}em
}

/// Set up an icon to display inline-block.

@mixin icon-inline {
  @include hide-text;
  
  display: inline-block;
  content: ' ';
}

/// Set up an icon to display as a block.

@mixin icon-block {
  @include hide-text;

  display: block;
  content: ' ';
}

/// Text with ellipsis

@mixin text-ellipsis {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin hover-red-box {
  border: 1px solid transparent;

  &:hover,
  &:focus {
    text-decoration: none;
    border-color: $red;
    color: $red;
  }
}

/// Navigation for a glossary.

@mixin glossary {
  justify-content: center;
  margin-bottom: 2em;
  background: $grey-light;

  .views-summary {
    border: 1px solid $white;
    
    a {
      display: inline-block;
      padding: 0.5em;
      width: 1.75em;
      background: $red;
      color: $white;
      text-align: center;

      &.is-active,
      &:hover,
      &:focus {
        background: $grey-dark;
      }
    }
  }
}

/// Block with dark background and light text

@mixin block-dark {
  background: $grey-dark;
  color: $white;
  
  > .field__label {
    @include subheading;
    padding-left: .5em;
  }
  
  .field__items {
    padding: .5em;
  }
}

/// Sub-heading

@mixin subheading {
  padding: .25em;
  background: $red;
  color: $white;
  font-weight: normal;
  font-size: 1.25em;
}

/// Button
///
/// Useful for links etc.

@mixin button($background, $color) {
  display: inline-block;
  margin: 0 .5em .5em 0;
  padding: .5em;
  background: $background;
  color: $color;
  border: 0;
  box-shadow: $shadow;

  &:hover,
  &:focus {
    background: $red-dark;
    text-decoration: underline;
  }
}

@mixin button-primary {
  @include button($red, $white);
}

@mixin button-secondary {
  @include button($grey-lighter, $black);
}

/// Top block

@mixin top-block {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-bottom: 2em;
}

@mixin details-block {
  padding: 1.5em;
  background: $grey-dark;
  color: $white;
  flex-basis: $details_block_width;
  font-size: .9em;

  .field {
    max-width: $details_block_width;
    margin-bottom: 1em;

    &:last-child {
      margin-bottom: 0;
    }
  }

  @include breakpoint($tablet-down) {
    flex-basis: 100%;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
  }
}

@mixin tags-wrapper {
  order: 2;
  display: flex;
  justify-content: space-between;

  @include breakpoint($tablet-down) {
    margin-top: 1em;
    width: 100%;
  }

  @include breakpoint($tablet) {
    flex-direction: column;
    flex-basis: 15em;
  }

  .field {
    @include block-dark;
    flex: 1;

    @include breakpoint($tablet-down) {
      max-width: 49%;
    }

    @include breakpoint($tablet) {
      &:nth-child(2) {
        margin-top: 1em;
      }
    }

    @include breakpoint($desktop) {
      .field--name-tags {
        margin-bottom: 2em;
      }
    }
  }
}

@mixin image-main {
  order: 1;

  @include breakpoint($tablet) {
    order: 2;
    max-width: 15em;
  }

  @include breakpoint($laptop) {
    max-width: 30em;
  }
}
