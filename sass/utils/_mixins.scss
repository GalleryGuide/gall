// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

%element-invisible {
  @include element-invisible;
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

%element-invisible-off {
  @include element-invisible-off;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

%element-focusable {
  @include element-focusable;
}

@mixin float-fix() {
  &:before,
  &:after {
    display: table;
    content: ' ';
    visibility: hidden; // Firefox
  }

  &:after {
    clear: both;
  }
}

%float-fix {
  @include float-fix;
}

@function em($pixels, $context: $base-font-size) {
  @return #{$pixels/$context}em
}

// Breakpoints
@mixin breakpoint($point) {
  @if $point == widescreen {
    @media only screen and (min-width: 1240px) {
      @content;
    }
  } @else if $point == desktop {
    @media only screen and (min-width: 1030px) {
      @content;
    }
  } @else if $point == laptop {
    @media only screen and (min-width: 900px) {
      @content;
    }
  } @else if $point == laptoponly {
    @media only screen and (min-width: 900px) and (max-width: 1030px) {
      @content;
    }
  } @else if $point == tablet {
    @media only screen and (min-width: 768px) {
      @content;
    }
  } @else if $point == phablet {
    @media only screen and (min-width: 481px) {
      @content;
    }
  } @else if $point == smallonly {
    @media only screen and (max-width: 899px) {
      @content;
    }
  } @else if $point == mobileonly {
    @media only screen and (max-width: 480px) {
      @content;
    }
  } @else {
    @media only screen and (min-width: $point) {
      @content;
    }
  }
}

@mixin icon-inline {
  display: inline-block;
  content: ' ';
}

@mixin icon-block {
  display: block;
  content: ' ';
}

@mixin tile {
  position: relative;
  width: 13.75em;

  h2 {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    background: $grey-translucent;
    color: $white;
    margin: 0;
    padding: .2em;
    font-weight: normal;
    font-size: 1.25em;
  }
}

@mixin tiles {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  .views-row {
    margin-bottom: 2em;
  }
}

@mixin glossary {
  justify-content: center;
  margin-bottom: 2em;
  background: $grey-light;

  .views-summary {
    border: 1px solid $white;
    
    a {
      display: inline-block;
      padding: 0.5em;
      width: 1.5em;
      background: $red;
      color: $white;

      &.is-active {
        background: $orange;
      }
    }
  }
}
